{"ast":null,"code":"import _objectSpread from \"/Users/dkalu/Desktop/Projects/Tests/Inspired Mobile/Code/name-generator \\u263A\\uFE0F/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { actionConstants } from \"../actions/\";\nvar initialState = {\n  names: [],\n  selected: [],\n  lastRandomlyPickedId: \"\"\n};\nexport var appReducer = function appReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionConstants.ADD_NAME:\n      {\n        return _objectSpread({}, state, {\n          names: action.payload\n        });\n      }\n\n    case actionConstants.DELETE_NAME:\n      {\n        var id = action.payload; // Prepare new state\n\n        var newState = state.names.filter(function (name) {\n          return name.id !== id;\n        });\n        return _objectSpread({}, state, {\n          names: newState\n        });\n      }\n\n    case actionConstants.SET_RANDOM_ID:\n      {\n        return _objectSpread({}, state, {\n          lastRandomlyPickedId: action.payload\n        });\n      }\n\n    case actionConstants.SET_SELECTED:\n      {\n        return _objectSpread({}, state, {\n          selected: action.payload\n        });\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/dkalu/Desktop/Projects/Tests/Inspired Mobile/Code/name-generator ☺️/src/reducers/appReducer.ts"],"names":["actionConstants","initialState","names","selected","lastRandomlyPickedId","appReducer","state","action","type","ADD_NAME","payload","DELETE_NAME","id","newState","filter","name","SET_RANDOM_ID","SET_SELECTED"],"mappings":";AACA,SAASA,eAAT,QAAgC,aAAhC;AASA,IAAMC,YAAuB,GAAG;AAC9BC,EAAAA,KAAK,EAAE,EADuB;AAE9BC,EAAAA,QAAQ,EAAE,EAFoB;AAG9BC,EAAAA,oBAAoB,EAAE;AAHQ,CAAhC;AAMA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAGrB;AAAA,MAFHC,KAEG,uEAFgBL,YAEhB;AAAA,MADHM,MACG;;AACH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,eAAe,CAACS,QAArB;AAA+B;AAC7B,iCAAYH,KAAZ;AAAmBJ,UAAAA,KAAK,EAAEK,MAAM,CAACG;AAAjC;AACD;;AACD,SAAKV,eAAe,CAACW,WAArB;AAAkC;AAChC,YAAMC,EAAE,GAAGL,MAAM,CAACG,OAAlB,CADgC,CAEhC;;AACA,YAAMG,QAA4B,GAAGP,KAAK,CAACJ,KAAN,CAAYY,MAAZ,CACnC,UAACC,IAAD;AAAA,iBAA4BA,IAAI,CAACH,EAAL,KAAYA,EAAxC;AAAA,SADmC,CAArC;AAGA,iCAAYN,KAAZ;AAAmBJ,UAAAA,KAAK,EAAEW;AAA1B;AACD;;AACD,SAAKb,eAAe,CAACgB,aAArB;AAAoC;AAClC,iCAAYV,KAAZ;AAAmBF,UAAAA,oBAAoB,EAAEG,MAAM,CAACG;AAAhD;AACD;;AACD,SAAKV,eAAe,CAACiB,YAArB;AAAmC;AACjC,iCAAYX,KAAZ;AAAmBH,UAAAA,QAAQ,EAAEI,MAAM,CAACG;AAApC;AACD;;AACD;AACE,aAAOJ,KAAP;AAnBJ;AAqBD,CAzBM","sourcesContent":["import * as MyTypes from \"../types/mytypes\";\nimport { actionConstants } from \"../actions/\";\nimport { PayloadInterface } from \"../types/interfaces\";\n\ninterface ListModel {\n  names: PayloadInterface[];\n  selected: PayloadInterface[];\n  lastRandomlyPickedId: string;\n}\n\nconst initialState: ListModel = {\n  names: [],\n  selected: [],\n  lastRandomlyPickedId: \"\"\n};\n\nexport const appReducer = (\n  state: ListModel = initialState,\n  action: MyTypes.RootAction\n) => {\n  switch (action.type) {\n    case actionConstants.ADD_NAME: {\n      return { ...state, names: action.payload };\n    }\n    case actionConstants.DELETE_NAME: {\n      const id = action.payload;\n      // Prepare new state\n      const newState: PayloadInterface[] = state.names.filter(\n        (name: PayloadInterface) => name.id !== id\n      );\n      return { ...state, names: newState };\n    }\n    case actionConstants.SET_RANDOM_ID: {\n      return { ...state, lastRandomlyPickedId: action.payload };\n    }\n    case actionConstants.SET_SELECTED: {\n      return { ...state, selected: action.payload };\n    }\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}